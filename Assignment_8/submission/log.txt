Dhruv Sharma
605 082 988

1. I reset the beaglebone using the debian image posted on the beaglebone website. The link to this was provided
   on the piazza website. I flashed it onto an SD card and flashed the beaglebone with the new image. The packages
   required for this assignment were also installed.

2. The first step was to make sure all open-ssh packages required are installed:

       $ dpkg --get-selections | grep ssh

   openssh-server and openssh-client were installed

3. Steps taken as a server to allow client access for lab partner:

   	 1. Generate public/private key pair
	    $ ssh-keygen

	 2. Added user for my lab partner and created home directory
	    $ sudo useradd -d /home/nico -m nico

	 3. Set a password for the new user
	    $ sudo passwd nico
	    Set password as "123"

	 4. Navigated to home directory for new user and set up ssh directory to place keys in for
	    authentication. Also gave read/write/execute permission to the user for the directory
	    $ cd /home/nico
	    $ sudo mkdir .ssh
	    $ sudo chown -R nico .ssh
	    $ sudo chmod 700 .ssh

	 5. Get ip address of my beaglebone so that my partner can ssh into it
	    $ ifconfig
	    Since the beaglebone was connected to the wifi,
	    the ip address was found under the wlan0 device.
	    The ip address is under inet

   By doing this, I created the user for my lab partner and setup a password. The home and .ssh directories were
   set up and the required permissions were set.

   The client will now be able to login to the server using his/her password. The user will be able to add his/her
   keys to the home directory and setup password-free logins

4. Steps taken as a client to gain access to server

   	 1. The same steps above were done by my partner to setup his beaglebone as a server

	 2. The same public/private keypair is used to setup communication between my partners server

	 3. Copy public key to server
	    $ ssh-copy-id -i dhruv@<server-ip> (<server-ip> was replaced by the actual ip address of the beaglebone)

	 5. Add keys to server ssh-agent
	    $ ssh-add

	 6. Connect to server
	    $ ssh -X dhruv@<server-ip> (<server-ip> was replaced by the actual ip address of the beaglebone)

	 7. Ran commands like xeyes and gedit to make sure X-forwarding works

